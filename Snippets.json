{
	//======================get request====================
	"Get request": {
		"scope": "javascript,typescript",
		"prefix": "get",
		"body": [
			"app.get('/$1',(req,res)=>{",
			"   rs.render('$2')",
			"})",
			" ",
			" ",
		],
		"description": "Get request Snippets"
	},

	//======================Post request====================
	"Post request": {
		"scope": "javascript,typescript",
		"prefix": "post",
		"body": [
			"app.post('/$1',urlencodedParser,(req,res)=>{",
			"    console.log(req.body)",
			"    res.send('found')",
			"})",
			" ",
			" ",
		],
		"description": "Post request Snippets"
	},

	//======================Fetch====================
	"Fetch API Snippets": {
		"scope": "javascript,typescript",
		"prefix": "fetch",
		"body": [
			
			"//====================get data===================",
			"//const files = document.querySelector('input[type=`file`]').files;",
			"let test_data = 'Numan';",
			" ",
			"//==============Set into formData================",
			"const form = new FormData()",
			"form.append('test_data', test_data)",
			"//data.append('picture', files[0]);",
			" ",
			" ",
			"//==============Finally send the data===========",
			"let url = '/$1'",
			"fetch(url, {",
			"   method: 'post',",
			"   body: form,",
			"})",
			"   .then(response => { return response.json() })",
			"   .then(data => { console.log(data) })",
			"   .catch(err => { console.error(err) })",
			" ",
			" ",
			
		],
		"description": "Fetch API"
	},

	//======================MongooseServer====================
	"mongooseServer API Snippets": {
		"scope": "javascript,typescript",
		"prefix": "mongooseServerConnect",
		"body": [
			"//NOTE:Create .env file and put here mongoose server url ",
			"//Like that:: DATABASE=mongodb+srv://kay:RealPassword@cluster0.rrlbs.mongodb.net/databaseFolder",
			"//========================================================================================",
			"//                                database",
			"//========================================================================================",
			"mongoose",
			".connect(process.env.DATABASE, {",
			"   useNewUrlParser: true,",
			"   useUnifiedTopology: true",
			"})",
			"var db = mongoose.connection;",
			"db.on('error', console.error.bind(console, 'MongoDB connection error:'));",
			"db.once('open', function () {",
			"console.log('MongoDB database connection successfully');",
			"});",
			" ", 
			" ", 
			" ", 
			"//========================================================================================",
			"//                                 Data base schema",
			"//========================================================================================",
			"let schema = new mongoose.Schema(",
			"{",
			"   name: String,",
			"   phone: String,",
			"   gmail: String,",
			"   img: String,",
			"}",
			");",
			" ", 
			" ", 
			"//========================================================================================",
			"//                                    Data Model",
			"//========================================================================================",
			"let model = mongoose.model('database_folder_name', schema);",
			" ",
			" ",
		],
		"description": "mongooseServerConnect"
	},
	//======================Mongoose Manual====================
	"mongooseManual API Snippets": {
		"scope": "javascript,typescript",
		"prefix": "mongooseManualConnect",
		"body": [
			"//Use this if you don't have any cloud Database ",
			"//NOTE:: Install mongobd on your pc or server and create a folder in c drive 'data/db'",
			"//========================================================================================",
            "//                                database",
			"//========================================================================================",
			"mongoose.connect('mongodb://localhost/folder1',{useNewUrlParser: true, useUnifiedTopology: true})",
			"var db = mongoose.connection;",
			"db.on('error', console.error.bind(console, 'MongoDB connection error:'));",
			"db.once('open', function() {",
			"console.log('MongoDB database connection successfully');",
			"});",
			" ",
			" ",
			" ",
			"//========================================================================================",
			"//                                 Data base schema",
			"//========================================================================================",
			"let schema = new mongoose.Schema(",
			"{",
			"   name: String,",
			"   phone: String,",
			"   gmail: String,",
			"   img: String,",
			"}",
			");",
			" ",
			" ",
			"//========================================================================================",
			"//                                    Data Model",
			"//========================================================================================",
			"let model = mongoose.model('database_folder_name', schema);",
			" ",
			" ",
		],
		"description": "mongooseManualConnect"
	},

	//======================Multer====================
	"Multer Snippets Storage and Filter": {
		"scope": "javascript,typescript",
		"prefix": "Multer",
		"body": [
			"//========================================================================================",
			"//                                Multer",
			"//========================================================================================",
			"let time;      //need this variable ",
			"let storage = multer.diskStorage({",
			"    destination: function (req, file, cb) {",
			"        cb(null, 'images/uploads/')",
			"    },",
			"    filename: function (req, file, cb) {",
			"        time = Date.now();",
			"        cb(null, file.fieldname + '-' + time + '.png')",
			"    }",
			"})",
			"const fileFilter = (req, file, cb) => {",
			"    if ((file.mimetype).includes('jpeg') || (file.mimetype).includes('png') || (file.mimetype).includes('jpg')) {",
			"        cb(null, true);",
			"    } else {",
			"        cb(null, false);",
			"    }",
			"};",
			"let upload = multer({ storage: storage, fileFilter: fileFilter }).single('myimg')",
			"upload(req, res, function (err) {",
			" ",
			"})",
			" ",
			" ",
		],
		"description": "Multer file save using 'Storage and Filter'"
	},
	//======================Domparser====================
	"DomparserToAddNewHtmlFile": {
		"scope": "javascript,typescript",
		"prefix": "Domparser To add new html file",
		"body": [
			" ",
			" ",
			"let parser = new DOMParser();",
			"let doc = parser.parseFromString(html, 'text/html');",
			"document.body.appendChild(doc.getElementById('id1'));//Append HTML file",
			"// $('head').append(doc.getElementsByTagName('script'));//Append new js file",
			"//  note:: if want to use this then add a cdn jquery 1.8.3 file to the html",
			"// script:: src='https://cdnjs.cloudflare.com/ajax/libs/jquery/1.8.3/jquery.min.js' integrity='sha512-J9QfbPuFlqGD2CYVCa6zn8/7PEgZnGpM5qtFOBZgwujjDnG5w5Fjx46YzqvIh/ORstcj7luStvvIHkisQi5SKw==' crossorigin='anonymous' referrerpolicy='no-referrer'",
			" ",
			" ",
			"let script = document.createElement('script')//Manually Appen new js file ",
			"script.type='text/javascript'",
			"script.textContent = doc.getElementsByTagName('script')[0].innerHTML",
			"$('head')[0].append(sc)",
			" ",
		],
		"description": "This code for add new html,js,css file by domparser from fetch"
	},
	
	
	

	
	
	    

    



}



